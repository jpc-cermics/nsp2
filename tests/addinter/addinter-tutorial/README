// -*- Mode: scilab -*- 
// Copyright (C) 2005-2015 Jean-Philippe Chancelier 
//                    Francois Delebecque 
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 

	We provide here two interfaces first.c and second.c.
	They are used to add two function first and second 
	at nsp level.
	A shared library libtutorial.so is built and loading this 
	shared library in nsp will add first and second 

[1] How to make the library run 
	jum to next section at number 2

[2] How to adapt the code for your functions
	0 - Write your interface program (see first.c and second.c)
	1 - Edit the builder.sce file and customize it according.
	2 - at the nsp prompt --> enter "exec builder.sce"

	3 - Then to load the library, at the nsp prompt --> enter 
		exec loader.sce
	(Note that you can load the library from an other directory)
	4 - Use the new function e.g. 
		-->first(5)
	5 - change libtutorial.tst 
		(and rename it if you have changed the library
		name in builder.sce )
	    type make tests to run libtutorial.tst
    	The first time you run make tests whith a changed libtutorial.tst,
	the generated file libtutorial.dia will differ from 
	libtutorial.dia.ref. 
        Manually check libtutorial.dia, if it is ok copy it to 
	libtutorial.dia.ref 
    
[3] How to run the contents of this directory as a test

	make distclean 
	make tests 
	should perform steps 2.2 to 2.4 automatically 
