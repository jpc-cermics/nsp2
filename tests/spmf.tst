// -*- Mode: nsp -*- 
// tests for special functions
// Bruno Pincon, march 2011

//////////////////////////////////////////////////////
//  test for real gamma
//////////////////////////////////////////////////////

// ye values ("exact" values) have been computed with the pari-gp
// software

// test special values
y = gamma(0);
if y ~= %inf then, pause, end
y = gamma(-0);
if y ~= -%inf then, pause, end
// we choose to return Nan on negative integers
y = gamma(-1000:-1); 
if ~and(isnan(y)) then, pause, end

// overflow limit
// the last double under the limit is
//xl = 171.6243769563027115; // or xl = 6038495938344519*2^(-45)
//yle = 1.797693134862229870088624928e308;
//yl = gamma(xl);
//er = abs( (yl-yle)/yle );
//if er > 1e-15 then, pause, end 
// The test is quite OK in usual  standard linux mode
// (ie using extended 80 bits precision
// for some partial calculations) with er=1.110223024625210e-16  
// but yl is Inf in "pure 64 mode" because of a lack of precision in pow
// linux lib math function in this mode.

// the first double over the limit is
xo = 171.6243769563027399; // or xo = 754811992293065*2^(-42)
yo = gamma(xo);
if ~isinf(yo) then, pause, end

// test on integers values for x = 2:23
// gamma(x) should return the exact values 
// (which are floating point numbers, btw
// gamma(24) = 23! is an integer which is
// not a floating point number)
ye = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000, 51090942171709440000, 1124000727777607680000];
y = gamma(2:23);
if ~y.equal[ye] then, pause, end

// a set of values linearly spaced between 0.25 and 10
x = 0.25:0.25:10;
ye = [3.625609908221908311930685156, 1.772453850905516027298167483, 1.225416702465177645129098303, 1.000000000000000000000000000, 0.9064024770554770779826712890, 0.8862269254527580136490837417, 0.9190625268488832338468237275, 1.000000000000000000000000000, 1.133003096319346347478339111, 1.329340388179137020473625613, 1.608359421985545659231941523, 2.000000000000000000000000000, 2.549256966718529281826263000, 3.323350970447842551184064031, 4.422988410460250562887839189, 6.000000000000000000000000000, 8.285085141835220165935354750, 11.63172839656744892914422411, 16.58620653922593961082939696, 24.00000000000000000000000000, 35.21161185279968570522525769, 52.34277778455352018114900849, 78.78448106132321315143963555, 120.0000000000000000000000000, 184.8609622271983499524326029, 287.8852778150443609963195467, 453.0107661026084756207779044, 720.0000000000000000000000000, 1155.381013919989687202703768, 1871.254305797788346476077054, 3057.822671192607210440250855, 5040.000000000000000000000000, 8376.512350919925232219602317, 14034.40729348341259857057790, 23698.12570174270588091194412, 40320.00000000000000000000000, 69106.22689508938316581171912, 119292.4619946090070878499122, 207358.5998902486764579795111, 362880.0000000000000000000000];

y = gamma(x);
er = max(abs((y-ye)./ye));
if er > 2e-16 then, pause, end  // the max is the same in both precisions

// a set of values between 11 and 171
x=[11*2^(0),4548998817162537*2^(-48),6001772890507859*2^(-48),1863636740963295*2^(-46),8907321037198501*2^(-48),5180047555271911*2^(-47),1476608647986143*2^(-45),6632821628617233*2^(-47),7359208665289893*2^(-47),4042797850981277*2^(-46),4405991369317607*2^(-46),2384592443826969*2^(-45),1283094601497567*2^(-44),2747785962163299*2^(-45),5858765442662929*2^(-46),6221958960999259*2^(-46),6585152479335589*2^(-46),6948345997671919*2^(-46),3655769758004125*2^(-45),1918683258586145*2^(-44),4018963276340455*2^(-45),8401120071017241*2^(-46),8764313589353571*2^(-46),4563753553844951*2^(-45),1186337578253279*2^(-43),4926947072181281*2^(-45),2554271915674723*2^(-44),5290140590517611*2^(-45),5471737349685777*2^(-45),2826667054426971*2^(-44),5834930868022107*2^(-45),171*2^(0)]

ye = [3628800.000000000000000000000, 2036403349895.556580815923750, 6462211960663685082.021544120, 74683406271490896674283508.94, 2.422299787732762386276722145e33, 1.855139197342410948427459630e41, 2.966462973957915875847772172e49, 9.032410502293449424898727420e57, 4.875038360014384501800487261e66, 4.404541879344084367428106761e75, 6.356775842304956552830838781e84, 1.409430650561378743615058381e94, 4.645006457588581167346424202e103, 2.211964796663733092473929016e113, 1.485152826374254288255944839e123, 1.376093018315905443963059269e133, 1.726580104341821958314593646e143, 2.884561256810080385948841625e153, 6.321027630684230204812844529e163, 1.792358736883033718134812692e174, 6.496302149578542663927527066e184, 2.976254783267358228729722676e195, 1.706145090144374902842514799e206, 1.212415051506535277015434933e217, 1.058882421313054836950375943e228, 1.127621676508051119938981619e239, 1.453487664319995577587431689e250, 2.252330161009596646997710586e261, 4.169365968294062731119074169e272, 9.165440293728891577327003613e283, 2.379446367999727652780856770e295, 7.257415615307998967396728211e306];

y = gamma(x);
er = max(abs((y-ye)./ye));
if er > 1e-13 then, pause, end  // max is 2.02e-16 in standard linux mode
                                // (ie using extended 80 bits precision
                                // for some partial calculations)
                                // but 8.110071424306185e-14 in pure double 
// a set of values around 0
// first > 0
x = [1265014083170733*2^(-1070),5.204528194914347e+15*2^(-1037),2676562467961639*2^(-1001),5.505964326910653e+15*2^(-967),2831583750808385*2^(-931),5.824859052322147e+15*2^(-897),5.991167128596425e+15*2^(-862),6.162223538861753e+15*2^(-827),6.338163854860609e+15*2^(-792),6.519127519104605e+15*2^(-757),1676314488846481*2^(-720),215521958826677*2^(-682),7.093613430928171e+15*2^(-652),3648073131778261*2^(-616),3752230849450473*2^(-581),7.718724838559045e+15*2^(-547),3969552749007245*2^(-511),8.165778341227983e+15*2^(-477),8.398923019067409e+15*2^(-442),8.638724311686507e+15*2^(-407),4442686137490983*2^(-371),2284765597803841*2^(-335),2349998930987295*2^(-300),2417094769349869*2^(-265),4.972212580167673e+15*2^(-231),639272047166887*2^(-193),5.260193444426475e+15*2^(-161),5.410379508107929e+15*2^(-126),1391213399802527*2^(-89),5.723738147062321e+15*2^(-56)];

ye = [9.999999999999670870882324686e306, 2.829594078322493387454696006e296, 8.006602648077066177837245724e285, 2.265543544048177474122309541e275, 6.410568596420459145338473032e264, 1.813930693911141284693081234e254, 5.132687549977956310145895053e243, 1.452342229729716939535762297e233, 4.109538972941204200708009063e222, 1.162832714246898171671326318e212, 3.290344562312685293260869346e201, 9.310339489160561283936805195e190, 2.634448148570071324431870997e180, 7.454418880841506891459387298e169, 2.109297952256445326583706411e159, 5.968456995122345740904327149e148, 1.688831057012126624540028160e138, 4.778706358208803978188519337e127, 1.352179921322804133742321135e117, 3.826120298201720397515090575e106, 1.082636733874062150344060554e96, 3.063422491144562502482337080e85, 8.668242140342910172616377908e74, 2.452760662977730471142928881e64, 6.940317047504255169409429863e53, 1.963828001929824391350393710e43, 5.556836085104288931675046784e32, 15723590480621342851067.43532, 444913785138.7469148691940694, 12.08533200197502815079559573];

y = gamma(x);
er = max(abs((y-ye)./ye));
if er > 2e-16 then, pause, end

// now take x = -x
x = -x;

ye = [-9.999999999999670870882324686e306, -2.829594078322493387454696006e296, -8.006602648077066177837245724e285, -2.265543544048177474122309541e275, -6.410568596420459145338473032e264, -1.813930693911141284693081234e254, -5.132687549977956310145895053e243, -1.452342229729716939535762297e233, -4.109538972941204200708009063e222, -1.162832714246898171671326318e212, -3.290344562312685293260869346e201, -9.310339489160561283936805195e190, -2.634448148570071324431870997e180, -7.454418880841506891459387298e169, -2.109297952256445326583706411e159, -5.968456995122345740904327149e148, -1.688831057012126624540028160e138, -4.778706358208803978188519337e127, -1.352179921322804133742321135e117, -3.826120298201720397515090575e106, -1.082636733874062150344060554e96, -3.063422491144562502482337080e85, -8.668242140342910172616377908e74, -2.452760662977730471142928881e64, -6.940317047504255169409429863e53, -1.963828001929824391350393710e43, -5.556836085104288931675046784e32, -15723590480621342851068.58975, -444913785139.9013461989971351, -13.25129363494955543588282674];

y = gamma(x);
er = max(abs((y-ye)./ye));
if er > 2e-16 then, pause, end


// a set of negative values
x = [-283484800772173*2^(-51),-5.414680535086253e+15*2^(-55),-6.463919145131793e+15*2^(-55),-1929118922347271*2^(-53),-1151468554293749*2^(-52),-1374596263784569*2^(-52),-6.563843645975819e+15*2^(-54),-3917881612215827*2^(-53),-4.677075553665753e+15*2^(-53),-2791691773749895*2^(-52),-416582053796121*2^(-49),-3978447401433889*2^(-52),-4.749377578121275e+15*2^(-52),-5.669696015443459e+15*2^(-52),-3384175334428907*2^(-51),-8.079898931414745e+15*2^(-52),-2411398652934089*2^(-50),-5.757342771468745e+15*2^(-51),-6.872981318922845e+15*2^(-51),-8.204804557469771e+15*2^(-51),-4.897352015269783e+15*2^(-50),-365396527630137*2^(-46),-3489614717187369*2^(-49),-8.331641075922421e+15*2^(-50),-4.973059251792363e+15*2^(-49),-371045123290725*2^(-45),-7.087120019304325e+15*2^(-49),-8.460438336072265e+15*2^(-49),-2524968416067107*2^(-47),-3014248316167613*2^(-47),-112448101005249*2^(-42),-4295613324326779*2^(-47),-1282000712104653*2^(-45),-1530422504771807*2^(-45),-7.307930552602741e+15*2^(-47),-545252299560527*2^(-43),-5.207275672451513e+15*2^(-46),-6.216324064740447e+15*2^(-46),-1855225616453623*2^(-44),-4429450012065203*2^(-45)];

ye = [-8.661636773571159006999134848, -7.404188185186604962401498206, -6.364615266186757951352075999, -5.512029239849197678357401548, -4.822660697209062020124998030, -4.280173503684272886030895542, -3.877411050265005267686176011, -3.621482956102778465431725311, -3.548299781648937173175404142, -3.770882643338761269969889261, -4.700588086824155095713669950, -9.172554898527015347099301905, 17.97685601288700542542486387, 3.796316757163386177165159818, 2.358589325477925029578606353, 3.124714345259239792925347515, -3.187057408205642107178743874, -0.9017553490216775805055525943, 3.001476262776025883358822009, 0.2452284752564405605262008892, -0.08565753609126954387261660749, 0.03302551032213295666945126456, -0.005126984330482937658803890304, 0.0002896250848360732182485250226, -0.00002521140991678128308231665300, -0.0000002390257810950077320799255756, -0.000000001519677375115232416605455302, 2.460908513140637105670101491e-11, 3.161547642697234881360236109e-15, 1.759797259593086145731084622e-20, 3.274361549984312371845120867e-26, -1.984034123743993061824358983e-33, -1.786319121287601034253501718e-42, 7.944924836279095002992307862e-54, 2.265614328642039817023926210e-67, 2.785536773612555669218290524e-84, 1.867899982117580065297033602e-104, -4.225666428895533162587089698e-135, 3.477544678906235074456314803e-169, 6.726061817081426690285695922e-211];

y = gamma(x);
er = max(abs((y-ye)./ye));

if er > 5e-14 then, pause, end  // max is 2.1e-16 in standard linux mode
                                // (ie using extended 80 bits precision
                                // for some partial calculations)
                                // but 3.340018961945634e-14 in pure double 










