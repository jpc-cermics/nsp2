dnl Process this file with autoconf to produce a configure script.
## Copyright Enpc 

AC_REVISION($Revision$)dnl
AC_INIT(COPYING)
SCIDIR=`pwd`
AC_CONFIG_AUX_DIR(config)
AC_CONFIG_HEADER(src/include/nsp/machine.h)

dnl Get system type
dnl use "config.guess" and "config.sub" from directory "config"
AC_CANONICAL_HOST

# default prefix
ac_default_prefix=/usr/local

#################################
## all the --with-* argument help
#################################

AC_ARG_ENABLE(wall,
    [  --disable-wall          do not use Wall compilation option (for gcc g77) ])

AC_ARG_ENABLE(wall,
    [  --disable-optimize     do not optimize ])

AC_ARG_WITH(pvm,
    [  --without-pvm           do not compile with PVM library ])

AC_ARG_WITH(nsp-pvm,
    [  --with-nsp-pvm          prefer local pvm version to a preinstalled one ])

AC_ARG_WITH(tk,
    [  --with-tk               add tcl-tk support ])

AC_ARG_WITH(gtkglext,
    [  --without-gtkglext      do not use Gtkglext widget for graphics ])

AC_ARG_WITH(addedf2c,
    [  --with-addedf2c         build a local f2c (src/f2c)])

AC_ARG_WITH(maxpluslib,
    [  --with-maxpluslib       add maxplus lib ])

AC_ARG_WITH(fftw3,
    [  --without-fftw3         do not use fftw3 for fft but fftpack])

AC_ARG_WITH(gmp,
    [  --without-gmp           do not try to check for gmp])

###############################
## creating Path.incl if needed
###############################
# 
# change scidir for mingw/cygwin 

case "$host" in
  *-*-cygwin* |   *-*-mingw32*)
    SCIDIR=`echo $SCIDIR | sed -e 's+/cygdrive/\([[a-zA-Z]]*\)/+\1:/+g' `
    ;;
esac

if test -f Path.incl; then
  PATH_INCL=`cat Path.incl`
fi
if test "$PATH_INCL" != "SCIDIR=$SCIDIR"; then
  echo "creating Path.incl"
  cat << EOF > Path.incl
SCIDIR=$SCIDIR
EOF
fi

###############################
## get the version 
###############################

SCIVERSION=`cat Version.incl | sed -e "s/SCIVERSION=//" `


########################
## removing and cleaning
########################

RM='rm -f'
FILES_TO_CLEAN='*.CKP *.ln *.BAK *.bak core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut .*~ *.trace so_locations *.orig *.cos *.obj' 

#############################################
## Compilers and options according to machine
#############################################

# use for making scripts in script directory
#   different for MIPS Ultrix
SCILAB_GS=sh
# scilab script file in script directory: default is "scilab.g" for UNIX
#   for gcwin32 use "scilab-gcwin32.g"
SCILABSCRIPT=scilab.g
# Fortran program in src/sun: default is "fgetarg.f" 
#   for HPUX use "fgetarg-hpux.f"
FGETARG=fgetarg
# For old Hp computer (9.x), used in "src/sun/Makefile.in"
#   for choosing the good file between link_std.c and link_SYSV.c
HPPA_OLD=
# Scilab main file: default is "mainsci.o" for UNIX
MAIN='mainsci.o'
# for graphics: default is X11
#   different for Win32
PERIFILE=periX11.o
# specific scilab dirs for graphics: default is "xsci" for X11
#   different for Win32
GUILIB=xsci 
# specific for gnome/gtk version 
GZVT=
# a directory providing the xdr support 
# used only for win32 target 
# 
LIBXDR_LOCAL=
LIBXDR=
# objects files in src/menus: default is XOBJS for UNIX
#   for Win32 use WOBJS
MENUSOBJS=XOBJS
# use other malloc (in "src/sun" directory) for some 64 bits machines
MALLOC=
# USE_CDEC directives for Dec Alpha
FC_USE_CDEC=DEC
# want to build Scilab f2c too 
if test "$with_addedf2c" = yes; then
  F2C_SUBDIR=f2c/src
else
  F2C_SUBDIR=
fi
# on windows target generating scripts for 
# printing is useless 
BLPR_SCRIPTS='$(BPROGRAMS)'
# on windows target when generating script 
# cygdrive/xxx must be replaced by xxx:/ 
# for mingw32 
SED_CYGDRIVE=
# subset of examples which are supposed to work 
EXAMPLES_TESTS='$(SUBDIRS1) $(SUBDIRS2)'
# special stuff for cygwin in impdir 
IMPPREF=S
IMPENV= 
# strip executable (not to be done on darwin) 
STRIP=strip

dnl Checks for programs.

AC_LANG(C)
AC_PROG_CC
AC_PROG_CXX
AC_PROG_F77
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar, :)

dnl Fortran libraries required for creating fortran
dnl shared libraries.  In particular this is needed
dnl for the lapack examples when using f2c.  This
dnl will set the FLIBS variable.

AC_F77_LIBRARY_LDFLAGS

dnl echo CC=$CC
dnl echo F77=$F77
dnl echo CPP=$CPP
dnl echo CPPFLAGS=$CPPFLAGS
dnl echo CFLAGS=$CFLAGS
dnl echo FFLAGS=$FFLAGS
dnl echo CXX=$CXX
dnl echo CXXFLAGS=$CXXFLAGS
dnl echo LD=$LD      defined by 
dnl echo LDFLAGS=$LDFLAGS
dnl echo GCC=$GCC
dnl echo G77=$GCC

############################################
# ieee flags (from gsl)
#############################################

save_cflags="$CFLAGS"
AC_CACHE_CHECK([for IEEE compiler flags], ac_cv_c_ieee_flags,
[
case "$host" in
    alpha*-*-*)
        if test X"$GCC" = Xyes ; then
            ieee_flags='-mieee -mfp-rounding-mode=d'
        else
            # This assumes Compaq's C compiler.
            ieee_flags='-ieee -fprm d'
        fi
        ;;
esac
if test X"$ieee_flags" != X ; then
  CFLAGS="$ieee_flags $CFLAGS"
  AC_TRY_COMPILE(,[int foo;],
  ac_cv_c_ieee_flags="$ieee_flags",
  ac_cv_c_ieee_flags="none")
else
  ac_cv_c_ieee_flags="none"
fi])

if test "$ac_cv_c_ieee_flags" != "none" ; then
   CFLAGS="$ac_cv_c_ieee_flags $save_cflags"
else
   CFLAGS="$save_cflags"
fi

############################################
# ieee lib check 
#############################################

AC_CHECK_LIB(ieee,main,[LIEEELIB=-lieee],[LIEEELIB=])

#########################
## libtool 
#########################

echo "configuration of libtool"
builtin(include,config/libtool.m4)
AC_PROG_LIBTOOL()
echo "end of configuration of libtool"

# get the shared lib extension (need to force evaluation)
eval SHREXT_NAME=$shrext_cmds

#############################################
## Compilers and options according to machine
## compilers were detected above 
#############################################

CC_OPTIONS="${CFLAGS}"
CC_LDFLAGS="${LDFLAGS} ${LIEEELIB}"
FC=$F77
FC_OPTIONS="${FFLAGS}"
FC_LDFLAGS="${LDFLAGS} ${LIEEELIB}"
LD_LDFLAGS="${LDFLAGS}"

#echo PPPPPPPPPP $lt_lt_prog_compiler_pic $lt_prog_compiler_pic_works
#echo QQQQQQQQQQ $lt_lt_prog_compiler_pic_F77 $lt_prog_compiler_pic_F77_works
#echo QQQQQQQQQQ $lt_lt_prog_compiler_pic_CXX $lt_prog_compiler_pic_CXX_works

case "$host" in
  # Linux ELF: all standard distributions
  i*86-*-linux-gnu | *-pc-linux-gnu )
    CC_PICFLAGS="-fPIC"
    FC_PICFLAGS="-fPIC"
    FC_LDFLAGS="${FC_LDFLAGS} -ldl -rdynamic"
    MAKEFILE_TARGET=Makefile.linux
   ;;
  # Linux gnu: x86_64 distributions added by cdh 2004-09-29
  x86_64-*-linux-gnu)
    if test X"$CC" = X"$ICC" ; then
       CC_OPTIONS="${CC_OPTIONS} -Dlinux -DNARROWPROTO -mp"
       CC_PICFLAGS="-fPIC"
       # -cm remove comments displays, -w90  -w95 remove warnings abort f90 f95 non standard
       FC_OPTIONS="${FC_OPTIONS}  -cm -w90 -w95 -mp "
       CC_LDFLAGS="${CC_LDFLAGS} -Wl,-relax"
       FC_LDFLAGS="${FC_LDFLAGS} -ldl  -lPEPCF90 -Wl,-relax "
       LD=xild
       LD_LDFLAGS="${LDFLAGS} -lPEPCF90 -Wl,-relax "
    else
       # CC_PLAT_OPTIONS is optional, and is used to add CPU specific code generation tuning for
       # Athlon64 presumably 
       # Opteron could benefit too but these are not optimized for the Opteron
       CC_PLAT_OPTIONS='-march=athlon64 -mfpmath=sse -msse2 -m3dnow -m64 '
       CC_OPTIONS="${CC_OPTIONS} ${CC_PLAT_OPTIONS}"
       CC_PICFLAGS=-fPIC
       FC_PICFLAGS=-fPIC
       FC_OPTIONS="${FC_OPTIONS} $CC_PLAT_OPTIONS"
       FC_LDFLAGS="${FC_LDFLAGS} -ldl -rdynamic -Wl,-relax" 
       CC_LDFLAGS="${CC_LDFLAGS} -ldl -rdynamic -Wl,-relax"
       LDFLAGS="${LDFLAGS} -Wl,-relax "
    fi
    MAKEFILE_TARGET=Makefile.linux
   ;;
# Dec Alpha OSF 4
   alpha*-dec-osf4.*)
     # standard compilers
    if test X"$CC" = Xcc; then
        CC_OPTIONS="${CC_OPTIONS} -std -ieee_with_inexact"
	CC_LDFLAGS="${CC_LDFLAGS} -ieee_with_inexact"
    fi
    if test X"$F77" = Xf77; then 
        FC_OPTIONS="${FC_OPTIONS} -fpe3"
	FC_USE_CDEC='   '
    fi
    MAKEFILE_TARGET=Makefile.alpha
    ;;
# Dec Alpha not OSF 4 (NO LONGER SUPPORTED)
  alpha*-dec-osf*)
    if test X"$CC" = Xcc; then
        # standard compilers
	CC_OPTIONS="${CC_OPTIONS} -ieee_with_inexact"
        CC_LDFLAGS="${CC_LDFLAGS} -ieee_with_inexact"
    fi
    if test X"$G77" = Xno; then
        FC_OPTIONS="${FC_OPTIONS} -fpe3 -switch nosqrt_recip"
    fi    
    FC_USE_CDEC='   '
    MAKEFILE_TARGET=Makefile.alpha
    ;;
# IBM AIX RS 6000 (NO LONGER SUPPORTED)
  rs6000-*-*)
    if test X"$CC" = Xcc; then
        # standard compilers
	CC_OPTIONS="${CC_OPTIONS}  -Daix -DSYSV"
    fi 
    if test X"$G77" = Xno; then
        FC_OPTIONS="${FC_OPTIONS} -qcharlen=4096"
    fi 
    MAKEFILE_TARGET=Makefile.aix
    ;;
# Linux sparc
  sparc*-*-linux-gnu)
    CC_OPTIONS="${CC_OPTIONS} -Dlinux "
    FC_LDFLAGS="${FC_LDFLAGS} -ldl -rdynamic"
    MAKEFILE_TARGET=Makefile.linux
   ;;
# SUN OS (NO LONGER SUPPORTED)
  sparc*-*-sunos*)
    # standard compilers
    CC_PICFLAGS=-PIC
    FC_PICFLAGS=-PIC
    if test X"$G77" = Xyes; then
      FC_PICFLAGS=
      FC_LDFLAGS="${FC_LDFLAGS} -Xlinker"
    fi
    MAKEFILE_TARGET=Makefile.sunos
    ;;
# SUN SOLARIS
  *-*-solaris*)
    CC_OPTIONS="${CC_OPTIONS} -DSVR4 -DSYSV -Dsolaris"
    if test X"$G77" = Xyes; then
      FC_LDFLAGS="${FC_LDFLAGS} -t"
    fi
    MAKEFILE_TARGET=Makefile.solaris
    ;;
# Linux, old binary format a.out (NO LONGER SUPPORTED)
  *-pc-linux-gnuaout)
    DLDLIB='${SCIDIR}/libs/libdld.a'
    DLD_SUBDIR=dld
    MAKEFILE_TARGET=Makefile.linux
   ;;
# Alpha Linux
  alpha-*-linux-gnu)
    MALLOC=malloc.o
    CC_OPTIONS="${CC_OPTIONS} -mieee-with-inexact -Dlinux"
    CC_LDFLAGS="${CC_LDFLAGS} -ldl -rdynamic -mieee-with-inexact"
    CC_PICFLAGS=-fPIC
    FC_OPTIONS= "${FC_OPTIONS} -mieee-with-inexact"
    FC_LDFLAGS="${FC_LDFLAGS} -ldl -rdynamic -mieee-with-inexact"
    MAKEFILE_TARGET=Makefile.linux
   ;;
# Mklinux PowerPC (Macintosh)
  powerpc-*-linux-gnu)
    CC_OPTIONS="${CC_OPTIONS} -D_GNU_SOURCE -Dlinux"
    CC_PICFLAGS=-fPIC
    FC_LDFLAGS="${FC_LDFLAGS} -ldl -rdynamic"
    FC_PICFLAGS=-fPIC
    MAKEFILE_TARGET=Makefile.linux
   ;;
# SGI MIPS ULTRIX (NO LONGER SUPPORTED)
  mips-*-ultrix*)
    if test X"$CC" = Xcc; then
        # standard compilers
	CC_OPTIONS="${CC_OPTIONS} -O0"
    fi
    if test X"$F77" = Xf77; then
        FC_OPTIONS="${FC_OPTIONS} -O0 -fpe1"
    fi 
    SCILAB_GS=sh5
    MAKEFILE_TARGET=Makefile.ultrix
    ;;
# SGI
  mips-sgi-irix*)
    if test X"$CC" = Xcc; then
        # standard compilers
	CC_OPTIONS="${CC_OPTIONS} -c -DSYSV -DSVR4"
    fi
    if test X"$F77" = Xf77; then    
        FC_OPTIONS="${FC_OPTIONS} -Nl999 -Nn15000"
    fi 
    MAKEFILE_TARGET=Makefile.sgi
    ;;
# OLD HP (NO LONGER SUPPORTED)
  *-*-hpux9.*)
    # standard compilers
    HPPA_OLD=-Dhppa_old
    if test X"$CC" = Xcc; then
        CC_OPTIONS="${CC_OPTIONS} -DSYSV -Dhpux"
	CC_LDFLAGS="${CC_LDFLAGS} -Wl,-a,archive'
    fi
    if test X"$F77" = Xfort77; then    
        FC_OPTIONS="${FC_OPTIONS}  +Obb1200 +E4"
	FC_LDFLAGS="${FC_LDFLAGS} -Wl,-a,archive"
    fi
    MAKEFILE_TARGET=Makefile.hpux9
    FGETARG=fgetarg-hpux
    ;;
# HP
  *-*-hpux*)
    # standard compilers
    if test X"$CC" = Xcc; then
        CC_OPTIONS="${CC_OPTIONS} -DSYSV -Dhpux +Z +DAportable"
	CC_LDFLAGS=${CC_LDFLAGS} -Wl,+vnocompatwarnings,-E /usr/lib/libdld.sl"
    fi
    if test X"$F77" = Xfort77; then    
        FC_OPTIONS="${FC_OPTIONS} +E4 +Z +DAportable"
	FC_LDFLAGS="${FC_LDFLAGS} -Wl,+vnocompatwarnings,-E /usr/lib/libdld.sl"
    fi
    MAKEFILE_TARGET=Makefile.hpux
    FGETARG=fgetarg-hpux
    ;;
# CYGWIN32 for Windows 9X/NT/XP 
  *-*-cygwin* )
    SCILABSCRIPT=scilab-gcwin32.g
    PERIFILE=periWin.o
    MAIN='mainwin95.o'
    GUILIB='wsci'
    MENUSOBJS=WOBJS
    BLPR_SCRIPTS=
    SED_CYGDRIVE='$(CYGDRIVE)'
    IMPPREF=B
    IMPENV=env.o
    F2C_SUBDIR=f2c/src
    # just *-so tests 
    EXAMPLES_TESTS='$(SUBDIRS1)'
    CC_OPTIONS="${CC_OPTIONS} -mieee-fp"
    FC_OPTIONS="${FC_OPTIONS} "
    LIBXDR="-lrpc -lrpclib"
    LD=gcc
    LD_LDFLAGS="${LDFLAGS} -mconsole --enable-stdcall-fixup"
    WINXFLAGS='-I../xdr'
    MAKEFILE_TARGET=Makefile.cygwin
    ;;
# mingw32 is detected 
   *-*-mingw32*)
    SCILABSCRIPT=scilab-gcwin32.g
    PERIFILE=periWin.o
    MAIN='mainwin95.o'
    GUILIB='wsci'
    LIBXDR_LOCAL='libxdr'
    MENUSOBJS=WOBJS
    BLPR_SCRIPTS=
    SED_CYGDRIVE='$(CYGDRIVE)'
    IMPPREF=B
    IMPENV=env.o
    F2C_SUBDIR=f2c/src
    # just *-so tests 
    EXAMPLES_TESTS='$(SUBDIRS1)'
    CC_OPTIONS="${CC_OPTIONS} -mieee-fp"
    FC_OPTIONS="${FC_OPTIONS}"
    LD=gcc
    LD_LDFLAGS="${LDFLAGS} -mconsole --enable-stdcall-fixup"
    WINXFLAGS='-I../xdr'
    MAKEFILE_TARGET=Makefile.gcwin32
    ;;
# FreeBSD  systems 
  *-*-freebsd*)
     CC_OPTIONS="${CC_OPTIONS} -Dfreebsd"
     CC_LDFLAGS="${CC_LDFLAGS} -lm"
     CC_PICFLAGS='-fPIC'
     # script shell f77 have bugs, get ours
     FC_OPTIONS="${FC_OPTIONS} -Dfreebsd"	
     FC_LDFLAGS="${FC_LDFLAGS} -lm -Wl,--export-dynamic"
     FC_PICFLAGS='-fPIC'
     LD=ld
     LD_LDFLAGS="${LDFLAGS} -lm"
     DLDLIB='${SCIDIR}/libs/libdld.a'
     DLD_SUBDIR=dld
     MAKEFILE_TARGET=Makefile.freebsd
    ;;
# NetBSD  systems 
  *-*-netbsd*)
    # check for --export-dynamic
    ac_save_LDFLAGS="$LDFLAGS"
    LDFLAGS='-Wl,--export-dynamic'
    AC_MSG_CHECKING([if the linker accepts --export-dynamic])
    AC_TRY_LINK(,,
      AC_MSG_RESULT(yes)
       LD_LDFLAGS=["$LD_LDFLAGS  --export-dynamic"],
       AC_MSG_RESULT(no))
    LDFLAGS="$ac_save_LDFLAGS" 
    CC_LDFLAGS="${LDFLAGS} ${LIEEELIB}"
    FC_LDFLAGS="${LDFLAGS} ${LIEEELIB}"
    # C compiler 
    if test X"$CC" = Xcc; then
        CC_OPTIONS="${CC_OPTIONS}  -Dnetbsd"
	CC_LDFLAGS="${CC_LDFLAGS} -Wl,-R${X11BASE}/lib"
    fi
    CC_PICFLAGS='-fPIC'
    FC_LDFLAGS="${FC_LDFLAGS}  -Wl,-R${X11BASE}/lib"
    FC_PICFLAGS='-fPIC'
    LD=ld
    LDFLAGS="${LDFLAGS} -R${X11BASE}/lib"
    #
    # Compiler Debug Flags
    #
    MAKEFILE_TARGET=Makefile.netbsd
   ;;
# Darwin/MacOSX 
  *-*-darwin*)
     STRIP=echo
     # -L/sw/lib is needed during configure but seams not best place
     CC_OPTIONS="${CC_OPTIONS}  -I/sw/include -L/sw/lib"
     CC_PICFLAGS='-fPIC'
     LIBS="$LIBS -L/sw/lib"
     # script shell f77 have bugs, get ours
     FC_LDFLAGS="${FC_LDFLAGS} -L/sw/lib -ldl"
     FC_PICFLAGS='-fPIC'
     # just *-so tests 
     EXAMPLES_TESTS='$(SUBDIRS1)'
     # FLIBS generated by libtool config should not be used 
     FLIBS= 
     MAKEFILE_TARGET=Makefile.darwin
    ;;
  *)
    AC_MSG_ERROR([Unable to configure for host $host])
    ;;
esac

############################################
# add -Wall 
# remove optimize 
#############################################

if test X"$enable_wall" != Xno; then 
   ENABLE_DEBUG=" Wall "
   if test X"$GCC" = Xyes ; then
      CC_OPTIONS="${CC_OPTIONS} -Wall"
   fi 
   if test X"$G77" = Xyes ; then
      FC_OPTIONS="${FC_OPTIONS} -Wall"
   fi 
else 
   ENABLE_DEBUG=
fi 

if test X"$enable_optimize" = Xno; then 
   CC_OPTIONS=`echo $CC_OPTIONS | sed -e 's/-O[[0-9]]*//g'`
   FC_OPTIONS=`echo $FC_OPTIONS | sed -e 's/-O[[0-9]]*//g'`
   ENABLE_DEBUG="${ENABLE_DEBUG}, optimize off"
fi 

#########################################
# FC_OPTIONS1 and CC_OPTIONS are similar 
# to FC_OPTIONS and CC_OPTIONS 
# except that if the compiler is g77 and gcc
# optimizations options are removed 
#########################################

FC_OPTIONS1=$FC_OPTIONS
if test "$G77" = yes; then
  FC_OPTIONS1=`echo $FC_OPTIONS | sed -e 's/-O[[0-9]]*//g'`
fi
CC_OPTIONS1=$CC_OPTIONS
if test "$GCC" = yes; then
  CC_OPTIONS1=`echo $CC_OPTIONS | sed -e "s/-O[[0-9]]*//g"`
fi

#########################################
# due overlapping arguments a few files must not be compiled
# with optimizer on some computers (SGI : unsfdcopy.f icopy.f)
#########################################

FC_OPTIONS2=$FC_OPTIONS
case "$host" in
# SGI MIPS 
  mips-sgi-irix*)
    FC_OPTIONS2=`echo $FC_OPTIONS | sed -e 's/-O[[0-9]]*//g'`
    ;;
esac

# due to a gcc bug, a few C functions must not be inlined when compiled
# with optimizer: the "floor" function in "src/graphics/Format.c"

NOINLINE=
if test "$GCC" = yes; then
  NOINLINE='-D__NO_MATH_INLINES'
fi

# flag for possible compilations in configure
CFLAGS=$CC_OPTIONS
LDLAGS=$CC_LDFLAGS

############################
## Check compiler features
############################

AC_C_INLINE
case $ac_cv_c_inline in
  inline | yes) AC_DEFINE(HAVE_INLINE) ;;
esac

#########################
## sizeof(int*)== sizeof(int)
#########################

builtin(include,config/ac_check_pointer.m4)
AC_CHECK_POINTER_SIZE() 

#######################
## test for underscores
## note that trailing underscores is already checked 
## elsewhere 
#######################

AC_MSG_CHECKING([for leading and/or trailing underscores])
cat << EOF > pipof.f
       subroutine pipof
       end
EOF

dnl expand possible $SCIDIR in $FC (wizard command...)
eval "FC1=\"$FC\""
eval "$FC1 -c pipof.f > /dev/null 2>&1"

FC_LEADING_UNDERSCORE=no
FC_TRAILING_UNDERSCORE=no

output=`$NM pipof.o|grep _pipof 2>&1`
if test ! -z "$output"; then
  FC_LEADING_UNDERSCORE=yes
  FC_TRAILING_UNDERSCORE=no
fi

output=`$NM pipof.o|grep pipof_ 2>&1`
if test ! -z "$output"; then
  FC_LEADING_UNDERSCORE=no
  FC_TRAILING_UNDERSCORE=yes
fi

output=`$NM pipof.o|grep _pipof_ 2>&1`
if test ! -z "$output"; then
  FC_LEADING_UNDERSCORE=yes
  FC_TRAILING_UNDERSCORE=yes
fi

if test "$FC_LEADING_UNDERSCORE" = yes; then
  AC_DEFINE(WLU)
fi
if test "$FC_TRAILING_UNDERSCORE" = yes; then
  AC_DEFINE(WTU)
fi

$RM pipof.f pipof.o

AC_MSG_RESULT([$FC_LEADING_UNDERSCORE $FC_TRAILING_UNDERSCORE])

#####################
## test for sharpsign
#####################

AC_MSG_CHECKING([for use of sharpsign in CPP])
AC_TRY_COMPILE([#define C2F(name) name##_],
  [C2F(toto)()],  
  AC_MSG_RESULT(yes)
  AC_DEFINE(USE_SHARP_SIGN),
  AC_MSG_RESULT(no))

##############################################################
## test for functions in standard C library and C math library
##############################################################

AC_CHECK_LIB(m,main)
AC_CHECK_FUNCS(exp10)
AC_CHECK_FUNCS(getwd)
AC_CHECK_FUNCS(getcwd)
AC_CHECK_FUNCS(sleep)
AC_CHECK_FUNCS(strerror)
AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(mkstemp)
AC_CHECK_FUNCS(tgamma)
AC_CHECK_FUNCS(lgamma)

AC_CHECK_FUNCS(finite isnan isinf)

########################
## test for header files
########################

AC_CHECK_HEADERS(values.h) 
AC_CHECK_HEADERS(limits.h) 
AC_CHECK_HEADERS(float.h) 
AC_CHECK_HEADERS(sys/time.h)

##################
## termcap library
##################

TERMCAPLIB=no
AC_CHECK_LIB(ncurses,main,
  [TERMCAPLIB=-lncurses])
if test "$TERMCAPLIB" = no; then
  AC_CHECK_LIB(curses,main,
  [TERMCAPLIB=-lcurses])
fi
if test "$TERMCAPLIB" = no; then
  AC_CHECK_LIB(termcap,main,
  [TERMCAPLIB=-ltermcap])
fi
if test "$TERMCAPLIB" = no; then
  AC_CHECK_LIB(termlib,main,
  [TERMCAPLIB=-ltermlib])
fi
if test "$TERMCAPLIB" != no; then
  AC_DEFINE(HAVE_TERMCAP)
else
  TERMCAPLIB=
fi

##################
## blas and lapack and atlas 
## 
##################

BLAS_LOCAL=libblas 
BLAS_LIBS=libs/blas.a 
LAPACK_LOCAL=liblapack
LAPACK_LIBS=libs/lapack.a 
USE_LOCAL_BLAS=yes
USE_LOCAL_LAPACK=yes

builtin(include,config/acx_blas.m4)
builtin(include,config/acx_lapack.m4)
ACX_BLAS([USE_LOCAL_BLAS=no])
ACX_LAPACK([USE_LOCAL_LAPACK=no])

if test "$USE_LOCAL_BLAS" = no; then 
   AC_MSG_RESULT(using $BLAS_LIBS for blas)
   BLAS_LOCAL=
else 
   BLAS_LIBS=libs/blas.a 
fi 

if test "$USE_LOCAL_LAPACK" = no; then 
   AC_MSG_RESULT(using $LAPACK_LIBS for lapack)
   LAPACK_LOCAL=
else 
   LAPACK_LIBS=libs/lapack.a 
fi 

#################
## PVM
#################

PVMARCH=
PVMLIB=
PVMGLIB=
PVMNSPDIR=
PVMTARGET=pvm-bidon
PVMROOT=
# need a non empty default value for scilab script 
# PVMRROTR is used in scripts/*
PVMROOTR='$SCI/pvm3'
PVMINST=

# files to be added for building the hoster with mingw 
PVMHOSTERFILES= 
# compile hoster ? 
PVMHOSTER=

if test "$with_pvm" != no; then
 # check for a locally installed PVM
 AC_MSG_CHECKING([checking which pvm library to use])
 if test -x $PVM_ROOT/lib/pvmgetarch ; then
  if test  "$with_nsp_pvm" != yes; then 
   AC_MSG_RESULT(local pvm in $PVM_ROOT)
   PVMROOT=$PVM_ROOT
   PVMROOTR=$PVM_ROOT
   PVMTARGET=pvm-bidon
  else 
   AC_MSG_RESULT(nsp pvm3)
   PVMROOT="$SCIDIR/pvm3"
   PVMROOTR='$SCI/pvm3'
   PVMTARGET=scilex-lib
   PVMINST='$(PVMBINDISTFILES) $(PVMBINDISTFILES1)'
  fi
 else
  AC_MSG_RESULT(nsp pvm3)
  PVMROOT="$SCIDIR/pvm3"
  PVMROOTR='$SCI/pvm3'
  PVMTARGET=scilex-lib
  PVMINST='$(PVMBINDISTFILES) $(PVMBINDISTFILES1)'
 fi

 PVMINCLUDE=$PVMROOT/include

  case "$host" in
      *-*-mingw32*)
      PVMINCLUDE="$PVMROOT/include -I$PVMROOT/src"
    ;;
  esac

 AC_ARG_WITH(pvm-include,
    [  --with-pvm-include=DIR  PVM include files are in DIR ],
    [  PVMINCLUDE=$withval
    ])

 AC_CACHE_CHECK([for PVM architecture],ac_cv_PVM_arch,
 [
 ac_cv_PVM_arch=`$PVMROOT/lib/pvmgetarch`
 ])
 if test "$ac_cv_PVM_arch" = UNKNOWN; then
  AC_MSG_WARN([PVM unable to find architecture: I will not use PVM])
  PVMTARGET=pvm-bidon
  PVMINST='$(PVMBINDISTFILES)'
 else
  AC_DEFINE(WITH_PVM)
  PVMARCH="$ac_cv_PVM_arch"

  case "$host" in
      *-*-mingw32*)
        ac_cv_PVM_arch=MINGW
        PVMARCH="$ac_cv_PVM_arch"
	PVMHOSTERFILES="pvmwinrexec.o pvmwinrsh.o"
	PVMHOSTER=h
    ;;
  esac

  if test $PVMROOT == "$SCIDIR/pvm3"; then 
    PVMLIBDIR=pvm3/lib/$ac_cv_PVM_arch
  else 
    PVMLIBDIR=$PVMROOT/lib/$ac_cv_PVM_arch
  fi
  AC_ARG_WITH(pvm-library,
  	[  --with-pvm-library=DIR  PVM library files are in DIR ],
    	[  PVMLIBDIR=$withval
	    ])
  PVMGLIB="$PVMLIBDIR/libgpvm3.a"
  PVMLIB="$PVMLIBDIR/libpvm3.a"
	
  PVMNSPDIR=libpvm
 fi

fi

#################
## GTK unsuported 
#################

#################
## GTK2 
#################

ZZLEDT="reader"

AC_PATH_PROG(PKG_CONFIG,pkg-config)
if test "x$PKG_CONFIG" = x; then
    # @*%&$ Ximian programmers renamed this application
    AC_PATH_PROG(PKG_CONFIG,pkgconfig,yes,no)
    if test "x$PKG_CONFIG" = x; then
    	AC_MSG_ERROR([Could not find the pkg-config (or pkgconfig) program.],)
	with_gtk2="no"
    fi
fi

AC_MSG_CHECKING([if gtk is version 2.1 or later])
GTK_VER=`$PKG_CONFIG --modversion gtk+-2.0`
case $GTK_VER in
      2.2.* | 2.3.0 | 2.3.1| 2.3.2| 2.3.4 )
        GTKPLUGBUG=gtkmenu.o
	;;
esac    
AC_MSG_RESULT([$GTK_VER])
# we have cheched above that gtk-config is in the 
# path, then we don't want to generate a full path 
# for gtk-config or to directly generate the 
# result of `gtk-config --cflags`. 
GTKCFLAGS='`pkg-config gtk+-2.0 --cflags`'
GTKLIBS='`pkg-config gtk+-2.0 --libs`'
AC_DEFINE(WITH_GTK)
GTK_PKGS='gtk+-2.0'
GUILIB='gtksci'
GZVT='gzvt2'
# we need a patched version 
SCILABSCRIPT=scilab-gtk.g
MENUSOBJS=GOBJS
PERIFILE=periGtk.o
# check for libgtkhtml-2.0
ac_save_LIBS="$LIBS"
LIBS=`pkg-config libgtkhtml-2.0 --cflags --libs`
GTKHTML=no
GTKHTMLOBJS=
AC_CHECK_LIB(gtkhtml-2,html_document_open_stream,[GTKHTML=yes])
if test "$GTKHTML" = no; then
   AC_MSG_WARN([Could not find the libgtkhtml-2.0 package.],)
   AC_MSG_WARN([WARNING interactive html  help will not be build .],)
else 
     GTK_PKGS="$GTK_PKGS libgtkhtml-2.0"
     GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
     GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
     GTKHTMLOBJS='$(OBJSHELP)'
     AC_DEFINE(WITH_GTKHTML)
fi
LIBS=$ac_save_LIBS
# check first for vte 
ac_save_LIBS="$LIBS"
LIBS=`pkg-config vte --cflags --libs` 
VTE=no 
AC_CHECK_LIB(vte,vte_terminal_new,[VTE=yes])
if test "$VTE" = no; then
   AC_MSG_WARN([Could not find the vte library. I will try libzvt-2.0 ],)
   AC_MSG_WARN([you should install vte and vte-devel ],)
   # check for zzledt 
   LIBS=`pkg-config libzvt-2.0 --cflags --libs` 
   GZVT2=no
   AC_CHECK_LIB(zvt-2.0, zvt_term_new_with_size,[GZVT2=yes])
   if test "$GZVT2" = no; then
       AC_MSG_ERROR([Could not find vte library or libzvt-2.0 library.],)
   else 
     TERM_NAME=zterm
     TERM_LDFLAGS=ZTERM_LDFLAGS
   fi
else 
   TERM_NAME=vte
   TERM_LDFLAGS=VTE_LDFLAGS
fi
LIBS=$ac_save_LIBS

# try to use readline with the gtk version 
  ac_save_LIBS="$LIBS"
  LIBS="$TERMCAPLIB  $LIBS"
  AC_CHECK_LIB(readline, rl_callback_read_char,[READLINE=-lreadline])
  LIBS=$ac_save_LIBS
  TERMCAPLIB="$READLINE $TERMCAPLIB"
  if test "no$READLINE" != no; then
     ZZLEDT="reader_rl"
     AC_DEFINE(WITH_READLINE)
  fi

#################
## GTKglext 
#################

PERIGLEXT=

WITH_GL="no"
if test "$with_gtkglext" != no; then
    gtkglext_version="1.0.0"
    AC_MSG_CHECKING([if gtkglext exists ])
    if pkg-config --exists gtkglext-1.0; then
       AC_MSG_RESULT([yes])
       AC_MSG_CHECKING([if gtkglext is version $gtkglext_version or later])
       if pkg-config --atleast-version=$gtkglext_version gtkglext-1.0 ; then
          AC_MSG_RESULT([yes])
          GTKGLEXT_VER=`$PKG_CONFIG --modversion gtkglext-1.0`
          # we have cheched above that gtk-config is in the 
          # path, then we don't want to generate a full path 
          # for gtk-config or to directly generate the 
          # result of `gtk-config --cflags`. Idem for gnome
          #GTK_PKGS="$GTK_PKGS gtkglext-1.0"
          #GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
          #GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
          #WITH_GL="yes"
	  AC_MSG_CHECKING([if freetype2 exists])
	  if pkg-config --exists freetype2; then
		 AC_MSG_RESULT([yes])
		 AC_MSG_CHECKING([if pangoft2 exists])
		 if pkg-config --exists pangoft2; then
			AC_MSG_RESULT([yes])
			GTK_PKGS="$GTK_PKGS gtkglext-1.0 pangoft2"
			GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
			GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
			WITH_GL="yes"
			PERIGLEXT="periGL.o"
			AC_DEFINE(WITH_GTKGLEXT)
		 else
			AC_MSG_WARN([pangoft2 is missing.]) 
			AC_MSG_WARN([WARNING OpenGL driver will not be build.])
		 fi
	  fi
       else 
    	  AC_MSG_WARN([Could not find the gtkglext-1.0 package version $gtkglext_version or later .],)
    	  AC_MSG_WARN([WARNING OpenGL driver will not be build .],)
       fi 
    else 
       AC_MSG_WARN([Could not find the gtkglext-1.0  package.],)
       AC_MSG_WARN([WARNING OpenGL driver will not be build .],)
    fi
fi

# check that we have glut if gtkglext-1.0 is used 
# this is not used (ZZZyes) we do not need glut for the moment

if test "$WITH_GL" == ZZZyes; then 
     AC_CHECK_HEADERS(
        [GL/glut.h],
        AC_CHECK_LIB(
           [glut],
           [glutStrokeCharacter],
           GLUT_LIBS="-lglut"
           [HAVE_GLUT="yes"],
           [HAVE_GLUT="no"]),
        [HAVE_GLUT="no"])
     if test "$HAVE_GLUT" == no; then 
	AC_MSG_WARN([Could not find the glut library.],)
	AC_MSG_WARN([WARNING OpenGL driver will not be build .],)
	WITH_GL="no"
	GTK_PKGS=`echo $GTK_PKGS | sed -e 's+gtkglext-1.0++g' `
	GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
	GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
     fi
fi 

#################
## detect tcl/tk
## unused 
## uncomment the with_tk=no
## to check tcl/tk detection
#################

builtin(include,config/tcl.m4)
builtin(include,config/ac_tcl.m4)

with_tk=no

if test X"$with_tk" != Xno; then
 SC_PATH_TCLCONFIG()
 SC_LOAD_TCLCONFIG()

 SC_PATH_TKCONFIG()
 SC_LOAD_TKCONFIG()

 AC_CHECK_TCL_VERSION(8,4)
 AC_CHECK_TK_VERSION(8,4)
 WITH_TKSCI=0
 if test $TCL_VERSION_OK == 1;then 
    if test $TK_VERSION_OK == 1 ; then
       WITH_TKSCI=1
    fi
 fi 
fi

## Set variables 

TK_INC_PATH=
TK_LIB_PATH=
TCLTK_LIBS=
TCLSCILIB=
TCLSCIDIR=

if test X"$with_tk" != Xno; then
 if test $WITH_TKSCI = 1; then
  AC_DEFINE(WITH_TK)
  TCLSCILIB="\$(SCIDIR)/libs/tclsci.a"
  TCLSCIDIR=tclsci
 else
  AC_MSG_ERROR([TCL/TK not found. Use --without-tk or specify the librairies and include paths manually])
 fi
 TKBASE=
 case "$host" in
   *-*-mingw32*)
	TKBASE=$SCIDIR
	TK_INC_PATH=`echo $TK_INC_PATH | sed -e "s+$SCIDIR+\\$(TKBASE)+g" `
	TCL_INC_PATH=`echo $TCL_INC_PATH | sed -e "s+$SCIDIR+\\$(TKBASE)+g" `
	TCLTK_LIBS=`echo $TCLTK_LIBS | sed -e "s+$SCIDIR+\\$(TKBASE)+g" `
    ;;
  esac
  GETLIBTK=libtk$TK_MAJOR_VERSION.$TK_MINOR_VERSION.$SONAME
  case "$host" in
   *-*-darwin*)
     GETLIBTK=/sw/lib/libtk$TK_MAJOR_VERSION.$TK_MINOR_VERSION.dylib
   ;;
  esac 
 TK_INC_PATH=$TCL_INCLUDE_SPEC
 TCL_INC_PATH=$TK_INCLUDE_SPEC
 TCLTK_LIBS="$TK_LIB_SPEC $TCL_LIB_SPEC" 
 #  $TK_LIBS $TCL_LIBS"
fi

#################
## maxplus 
#################

MPLUSLIB=
MPLUSLIBDIR=

if test "$with_maxpluslib" = yes; then
   AC_DEFINE(WITH_MAXPLUSLIB)
   MPLUSLIB=libs/maxplus.a
   MPLUSLIBDIR=libmaxplus
fi 

#################
## umfpack 
## prepared for future use 
#################

UFSPARSE_LIB=

builtin(include,config/ac_find_file.m4)
builtin(include,config/ac_check_umfpack.m4)
AC_CHECK_AMD()
if test "xx$amd_libs" != "xx" ; then
   AC_MSG_RESULT([using "$amd_libs" for amd libraries])
   AC_MSG_RESULT([using "-I${amd_includedir}" for amd includes])
fi

if test "xx$amd_libs" != "xx" ; then
  AC_CHECK_UMFPACK()
  if test "xx$umfpack_libs" != "xx" ; then
   AC_DEFINE(WITH_UMFPACK)
   AC_MSG_RESULT([using "$umfpack_libs" for umfpack libraries])
   UMFPACK_LIBS=$umfpack_libs
   UFSPARSE_LIB=libumfpack
   if test "x${umfpack_includedir}" != "x${amd_includedir}"; then 
    AC_MSG_RESULT([using "-I${umfpack_includedir} -I${amd_includedir}" for umfpack includes])
    CC_OPTIONS="${CC_OPTIONS} -I${umfpack_includedir} -I${amd_includedir}"
   else 
    AC_MSG_RESULT([using "-I${umfpack_includedir}" for umfpack includes])
    CC_OPTIONS="${CC_OPTIONS} -I${umfpack_includedir}"
   fi
  fi	          
fi

#################
## fftw 
#################

if test "$with_fftw3" != no; then                           
   ## search for fftw3#
   if test "x$PKG_CONFIG" != x; then # try first to use pkg-config	
      ## If fftw3.pc is found, set FFTW3_CFLAGS and FFTW3_LIBS
      PKG_CHECK_MODULES(FFTW3, fftw3 >= 3.0, HAVE_FFTW3="yes", HAVE_FFTW3="no")
      ## In case of success I just want fftw3 be added in GTK_PKGS 
      if test "$HAVE_FFTW3" = "yes"; then
	 GTK_PKGS="$GTK_PKGS fftw3"
         GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
         GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
	 FFTW3_CFLAGS=""
	 FFTW3_LIBS=""
      fi 
   fi
   if test "$HAVE_FFTW3" = "no"; then # try to find fftw3 at usual places
     AC_CHECK_HEADERS(
        [fftw3.h],
        AC_CHECK_LIB(
           [fftw3],
           [fftw_plan_dft_1d],
           FFTW3_CFLAGS=
           FFTW3_LIBS="-lfftw3 -lm"
           [HAVE_FFTW3="yes"],
           [HAVE_FFTW3="no"]),
        [HAVE_FFTW3="no"])
   fi
else
   HAVE_FFTW3="no"
fi

if test "$HAVE_FFTW3" = "yes"; then
  AC_DEFINE(WITH_FFTW3)
  IN_FFTPACK=NOTHING    
else
  IN_FFTPACK=FFTPACK
fi


#################
## gmp 
#################

if test "$with_gmp" != no; then                           
   ## search for gmp since gmp.pc does not exists 
   ## the next test is deactivated 
   if test "x$PKG_CONFIG" == xDEACTIVATED ; then 
      ## try first to use pkg-config	
      ## If gmp.pc is found, set GMP_CFLAGS and GMP_LIBS
      ## this is not supposed to work since gmp.pc does not exists
      PKG_CHECK_MODULES(GMP, gmp >= 1.0, HAVE_GMP="yes", HAVE_GMP="no")
      ## In case of success I just want fftw3 be added in GTK_PKGS 
      if test "$HAVE_GMP" = "yes"; then
	 GTK_PKGS="$GTK_PKGS gmp"
         GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
         GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
	 GMP_CFLAGS=""
	 GMP_LIBS=""
      fi 
   fi
   HAVE_GMP=no
   if test "$HAVE_GMP" = "no"; then # try to find gmp at usual places
     AC_CHECK_HEADERS(
        [gmp.h],
        AC_CHECK_LIB(
           [gmp],
           [__gmpz_mul],
           GMP_CFLAGS=
           GMP_LIBS="-lgmp"
           [HAVE_GMP="yes"],
           [HAVE_GMP="no"]),
        [HAVE_GMP="no"])
   fi
else
   HAVE_GMP="no"
fi

if test "$HAVE_GMP" = "yes"; then
  AC_DEFINE(WITH_GMP)
fi

#################
## libsndfile 
#################

SNDFILE_LIB= 

if test "$with_sndfile" != no; then                           
   ## search for sndfile 
   if test "x$PKG_CONFIG" != x ; then 
      ## try first to use pkg-config	
      ## If sndfile.pc is found, set GMP_CFLAGS and GMP_LIBS
      ## this is not supposed to work since sndfile.pc does not exists
      PKG_CHECK_MODULES(SNDFILE, sndfile >= 1.0, HAVE_SNDFILE="yes", HAVE_SNDFILE="no")
      ## In case of success I just want fftw3 be added in GTK_PKGS 
      if test "$HAVE_SNDFILE" = "yes"; then
	 GTK_PKGS="$GTK_PKGS sndfile"
         GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
         GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
	 SNDFILE_CFLAGS=""
	 SNDFILE_LIBS=""
      fi 
   fi
   if test "$HAVE_SNDFILE" = "no"; then # try to find sndfile at usual places
     AC_CHECK_HEADERS(
        [sndfile.h],
        AC_CHECK_LIB(
           [sndfile],
           [sf_write_double],
           SNDFILE_CFLAGS=
           SNDFILE_LIBS="-lsndfile"
           [HAVE_SNDFILE="yes"],
           [HAVE_SNDFILE="no"]),
        [HAVE_SNDFILE="no"])
   fi
else
   HAVE_SNDFILE="no"
fi

if test "$HAVE_SNDFILE" = "yes"; then
  AC_DEFINE(WITH_SNDFILE)
  SNDFILE_LIB=libsndfile 
fi

#################
## libasound
#################

if test "$with_asound" != no; then                           
   ## search for sndfile 
   if test "x$PKG_CONFIG" != x ; then 
      ## try first to use pkg-config	
      ## If sndfile.pc is found, set GMP_CFLAGS and GMP_LIBS
      ## this is not supposed to work since sndfile.pc does not exists
      PKG_CHECK_MODULES(ASOUND, alsa >= 1.0, HAVE_ASOUND="yes", HAVE_ASOUND="no")
      ## In case of success I just want fftw3 be added in GTK_PKGS 
      if test "$HAVE_ASOUND" = "yes"; then
	 GTK_PKGS="$GTK_PKGS alsa"
         GTKCFLAGS="\`pkg-config $GTK_PKGS --cflags\`"
         GTKLIBS="\`pkg-config $GTK_PKGS --libs\`"
	 ASOUND_CFLAGS=""
	 ASOUND_LIBS=""
      fi 
   fi
   if test "$HAVE_ASOUND" = "no"; then # try to find sndfile at usual places
     AC_CHECK_HEADERS(
        [sndfile.h],
        AC_CHECK_LIB(
           [asound],
           [alsa_open],
           ASOUND_CFLAGS=
	   ASOUND_LIBS="-lasound"
           [HAVE_ASOUND="yes"],
           [HAVE_ASOUND="no"]),
        [HAVE_ASOUND="no"])
   fi
else
   HAVE_ASOUND="no"
fi

if test "$HAVE_ASOUND" = "yes"; then
  AC_DEFINE(WITH_ASOUND)
fi


#########################
## substituting variables
#########################

AC_SUBST(SHREXT_NAME)
AC_SUBST(RM)
AC_SUBST(AR)
AC_SUBST(AR_FLAGS)
AC_SUBST(FILES_TO_CLEAN)
AC_SUBST(CC)
AC_SUBST(CC_OPTIONS)
AC_SUBST(CC_LDFLAGS)
AC_SUBST(CC_PICFLAGS)
AC_SUBST(FC)
AC_SUBST(FC_OPTIONS)
AC_SUBST(FC_OPTIONS1)
AC_SUBST(CC_OPTIONS1)
AC_SUBST(FC_OPTIONS2)
AC_SUBST(FC_LDFLAGS)
AC_SUBST(FC_PICFLAGS)
AC_SUBST(LD)
AC_SUBST(LD_LDFLAGS)
AC_SUBST(SCILAB_GS)
AC_SUBST(SCILABSCRIPT)
AC_SUBST(FGETARG)
AC_SUBST(HPPA_OLD)
AC_SUBST(DLDLIB)
AC_SUBST(DLD_SUBDIR)
AC_SUBST(XAWLIB)
AC_SUBST(XAW)
AC_SUBST(XMULIB)
AC_SUBST(XAW_LOCAL_SUBDIR)
AC_SUBST(XAW_LOCAL_INCLUDES)
AC_SUBST(XAW_LOCAL_LIB)
AC_SUBST(GTKCFLAGS)
AC_SUBST(GTKLIBS)
AC_SUBST(TERMCAPLIB)
AC_SUBST(MAIN)
AC_SUBST(MAKEFILE_TARGET)
AC_SUBST(PERIFILE)
AC_SUBST(GUILIB)
AC_SUBST(GZVT)
AC_SUBST(LIBXDR_LOCAL)
AC_SUBST(LIBXDR)
AC_SUBST(WINXFLAGS)
AC_SUBST(MENUSOBJS)
AC_SUBST(MALLOC)
AC_SUBST(PVMARCH)
AC_SUBST(PVMLIB)
AC_SUBST(PVMNSPDIR)
AC_SUBST(PVMGLIB)
AC_SUBST(PVMTARGET)
AC_SUBST(PVMROOT)
AC_SUBST(PVMROOTR)
AC_SUBST(PVMINST)
AC_SUBST(PVMINCLUDE)
AC_SUBST(PVMHOSTERFILES)
AC_SUBST(PVMHOSTER)

AC_SUBST(TK_INC_PATH)
AC_SUBST(TCL_INC_PATH)
AC_SUBST(TCLTK_LIBS)
AC_SUBST(TKSCILIB)
AC_SUBST(TKSCIDIR)
AC_SUBST(NOINLINE)
AC_SUBST(WHICH_BLAS)
AC_SUBST(ATLAS_DIR)
AC_SUBST(IN_ATLAS)
AC_SUBST(IN_FFTPACK)
AC_SUBST(FFTW3_CFLAGS)
AC_SUBST(FFTW3_LIBS)
AC_SUBST(GMP_CFLAGS)
AC_SUBST(GMP_LIBS)
AC_SUBST(SNDFILE_CFLAGS)
AC_SUBST(SNDFILE_LIBS)
AC_SUBST(SNDFILE_LIB)
AC_SUBST(ASOUND_CFLAGS)
AC_SUBST(ASOUND_LIBS)
AC_SUBST(SHELL)
AC_SUBST(DLLTOOL)
AC_SUBST(LD)
AC_SUBST(LIBM)
AC_SUBST(LIBTOOL)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(LN_S)
AC_SUBST(NM)
AC_SUBST(OBJDUMP)
AC_SUBST(PACKAGE)
AC_SUBST(RANLIB)
AC_SUBST(STATIC)
AC_SUBST(SCIVERSION)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)
AC_SUBST(FLIBS)
#AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(FC_USE_CDEC)
AC_SUBST(FC_SUBDIR)
AC_SUBST(BLPR_SCRIPTS)
AC_SUBST(SED_CYGDRIVE)
AC_SUBST(F2C_SUBDIR)
AC_SUBST(EXAMPLES_TESTS)
AC_SUBST(IMPPREF)
AC_SUBST(IMPENV)
AC_SUBST(ZZLEDT)
AC_SUBST(STRIP)
AC_SUBST(PERIGLEXT)
AC_SUBST(TERM_NAME)
AC_SUBST(TERM_LDFLAGS)
AC_SUBST(GTKHTMLOBJS)
AC_SUBST(GTKPLUGBUG)
AC_SUBST(MPLUSLIB)
AC_SUBST(MPLUSLIBDIR)
AC_SUBST(ENABLE_DEBUG)
AC_SUBST(UMFPACK_LIBS)
AC_SUBST(BLAS_LIBS)
AC_SUBST(LAPACK_LIBS)
AC_SUBST(BLAS_LOCAL)
AC_SUBST(LAPACK_LOCAL)
AC_SUBST(GTK_PKGS)
AC_SUBST(UFSPARSE_LIB)

AC_OUTPUT(Makefile.incl Makefile scripts/Makefile src/Makefile src/graphics/Makefile src/menus/Makefile config/Makemex config/Makeso.incl config/Makefile.aix config/Makefile.ultrix scripts/scilab.g scripts/scilab-gtk.g src/include/nsp/version.h src/gtksci/Makefile pvm3/Makefile pvm3/Makefile.aimk pvm3/hoster/Makefile.aimk src/gzvt2/Makefile src/interp/Makefile config/Makefile.linux src/liblapack/Makefile src/libfft/Makefile src/include/nsp/shext.h) 

echo
echo
echo "*******************"
echo "*     Summary     *"
echo "*******************"
echo
echo "FFTW3 support..........:" $HAVE_FFTW3
echo "OpenGl support.........:" $WITH_GL
echo 
echo "Managed by pkg-config..:" $GTK_PKGS
echo "Lapack and Blas........:" $LAPACK_LIBS $BLAS_LIBS
if test "$HAVE_GMP" = "yes"; then
   echo "gmp....................:" $GMP_LIBS
fi
echo "Terminal...............:" $TERMCAPLIB
if test "xx$umfpack_libs" != "xx" ; then
   echo "umfpack................:" $UMFPACK_LIBS
fi
echo 
echo "C compiler.............:" $CC
echo "C options..............:" $CC_OPTIONS 
echo "Fortran compiler.......:" $FC
echo "Fortran options........:" $FC_OPTIONS 
echo


