SHELL = /bin/sh
TOP=.

include Path.incl
include Makefile.incl

all:: bin/scilex  

# can be used to recreate all the .a 
# 

reset_libs: 
	@$(RM) libs/*.a src/*/.archive_target

# can be used to update path.incl 
# note that thist is done by ./configure

path.incl: 
	./config/findpath;

# directives for linking 

include config/@MAKEFILE_TARGET@

distclean::
	$(RM) bin/scilex

scilex-lib::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	cd src; echo "making all in src..."; \
		$(MAKE) $(MFLAGS) all;

@PVMTARGET@::
	@cd pvm3; echo "making all in pvm3..."; $(MAKE) $(MFLAGS) "CC=$(CC)";

SUBDIRS = scripts macros demos 

all::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "making all in $$i..."; \
			$(MAKE) $(MFLAGS) all); \
	done

distclean::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in src $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "making distclean in $$i..."; \
			$(MAKE) $(MFLAGS)  distclean); \
	done

distclean::
	@cd pvm3; echo "making distclean in pvm3..."; \
	$(MAKE) $(MFLAGS) distclean;

clean::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in src $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "making clean in $$i..."; \
			$(MAKE) $(MFLAGS)  clean); \
	done

man::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in man;\
	do \
		(cd $$i ; echo "making man in $$i..."; \
			$(MAKE) $(MFLAGS) man); \
	done

manclean:	
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in man;\
	do \
		(cd $$i ; echo "making manclean in $$i..."; \
			$(MAKE) $(MFLAGS) manclean); \
	done

tests:
	@echo "Type \"make tests\" in $(SCIDIR)/tests directory "
	@echo "  to test the  distribution"

distclean::
	$(RM) config.cache config.log config.status .binary foo.f foo.o \
	conftest conftest.c so_locations

tarbindist:
	@echo tarbindist not supported by nsp 
	@echo use ./configure --prefix=path
	@echo to get a binary version at path location

# this are the files that really need to be installed 
# from pvm 
# 	pvm3/lib/pvm \
# 	pvm3/lib/pvmd \
# 	pvm3/lib/pvmtmparch \
# 	pvm3/lib/pvmgetarch \
# 	pvm3/lib/@PVMARCH@/pvmd3 \
# 	pvm3/lib/@PVMARCH@/pvmgs \
# 	pvm3/lib/@PVMARCH@/pvm \
# 	pvm3/bin/@PVMARCH@/*

# take care that some scripts are installed in prefix but should contain 
# a string which is a reference to DESTDIR which can be != from $(prefix)/lib/nsp 
# this is the case when building a deb package. 

DESTDIR=$(prefix)/lib/nsp

install:
	@echo "installing bin files"
	@find bin -type f -exec $(TOP)/config/install-sh  $(opt_PROG) {} $(prefix)/lib/nsp/{} \;
	@echo "installing lib files"
	@find libs -type f -exec $(TOP)/config/install-sh  $(opt_DATA) {} $(prefix)/lib/nsp/{} \;
	@echo "installing pvm3 files"
	@find pvm3/lib \( -type f  \) \
		-exec $(TOP)/config/install-sh  $(opt_PROG) {} $(prefix)/lib/nsp/{} \;
	@find pvm3/lib \( -name '*.a'  \) \
		-exec $(TOP)/config/install-sh  $(opt_DATA) {} $(prefix)/lib/nsp/{} \;
	@find pvm3/bin \( -type f \) \
		-exec $(TOP)/config/install-sh  $(opt_PROG) {} $(prefix)/lib/nsp/{} \;
	@cd src/include ; make install;
	@cd config ; make install;
	@cd demos ; make install;
	@cd macros ; make install;
	@cd man ; make install;
	@cd scripts; rm nsp-inst ; make nsp-inst DESTDIR=$(DESTDIR)
	@cd scripts; rm nsplibtool-inst ; make nsplibtool-inst DESTDIR=$(DESTDIR)
	@cd scripts; rm Path.incl ; make Path.incl DESTDIR=$(DESTDIR)
	@$(TOP)/config/install-sh $(opt_PROG) scripts/nsp-inst $(prefix)/lib/nsp/bin/nsp
	@$(TOP)/config/install-sh $(opt_PROG) scripts/nsplibtool-inst $(prefix)/lib/nsp/bin/nsplibtool
	@$(TOP)/config/install-sh $(opt_DATA) scripts/Path.incl $(prefix)/lib/nsp/Path.incl
	@$(TOP)/config/install-sh $(opt_PROG) libtool $(prefix)/lib/nsp/
	@$(TOP)/config/install-sh $(opt_DATA) Makefile.incl  $(prefix)/lib/nsp/
	@$(TOP)/config/install-sh $(opt_PROG) scripts/nsp-inst $(prefix)/bin/nsp
	@$(TOP)/config/install-sh $(opt_PROG) scripts/nsplibtool-inst $(prefix)/bin/nsplibtool

cvsclean::

