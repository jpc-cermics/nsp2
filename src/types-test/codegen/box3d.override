/* -*- Mode: C -*- */
%%
include Box3d

/* inserted at the end of public part of include file */

%%
include_private Box3d

/* inserted in the private part of include file */

static void nsp_draw_box3d(BCG *Xgc,NspGraphic *Obj, void *data);
static void nsp_translate_box3d(BCG *Xgc,NspGraphic *o,double *tr);
static void nsp_rotate_box3d(BCG *Xgc,NspGraphic *o,double *R);
static void nsp_scale_box3d(BCG *Xgc,NspGraphic *o,double *alpha);
static int nsp_getbounds_box3d(BCG *Xgc,NspGraphic *o,double *bounds);

%%
headers
#include <nsp/figuredata.h> 
#include <nsp/figure.h> 
#include <nsp/box3d.h>

%%
init 

Init portion 

%%
override-type Box3d
  /* inserted verbatim in the type definition 
   * here we override the method og its father class i.e Graphic
   */
  ((NspTypeNspGraphic *) type->surtype)->draw = nsp_draw_box3d;
  ((NspTypeNspGraphic *) type->surtype)->translate =nsp_translate_box3d ;
  ((NspTypeNspGraphic *) type->surtype)->rotate =nsp_rotate_box3d  ;
  ((NspTypeNspGraphic *) type->surtype)->scale =nsp_scale_box3d  ;
  ((NspTypeNspGraphic *) type->surtype)->bounds =nsp_getbounds_box3d  ;
  ((NspTypeNspGraphic *) type->surtype)->full_copy = (full_copy_func *) nsp_box3d_full_copy ;
  /* next method are defined in NspGraphic and need not be chnaged here for Box3d */
  /* ((NspTypeNspGraphic *) type->surtype)->link_figure = nsp_graphic_link_figure; */ 
  /* ((NspTypeNspGraphic *) type->surtype)->unlink_figure = nsp_graphic_unlink_figure; */ 

%%
modulename atk
/* %%  import gobject.GObject as GObject */

%%
ignore-glob
  *_get_type

%%
override box3d_attach kwargs
int _wrap_box3d_attach(Stack stack, int rhs, int opt, int lhs)
{
  NspObject  *pl = NULL;
  BCG *Xgc;
  int_types T[] = {obj, t_end} ;
  if ( GetArgs(stack,rhs,opt,T,&pl) == FAIL) return RET_BUG;
  Xgc=nsp_check_graphic_context();
  tape_store_graphic_object(Xgc, pl);
  return 0;
}

%%
override nsp_extractelts_box3d kwargs

extern function int_nspgraphic_extract;

int _wrap_nsp_extractelts_box3d(Stack stack, int rhs, int opt, int lhs) 
{
  return int_nspgraphic_extract(stack,rhs,opt,lhs);
}

%%
override nsp_setrowscols_box3d kwargs

extern function int_graphic_set_attribute;

int _wrap_nsp_setrowscols_box3d(Stack stack, int rhs, int opt, int lhs) 
{
  return int_graphic_set_attribute(stack,rhs,opt,lhs);
}


%%
last

/* inserted verbatim at the end */

static void nsp_draw_box3d(BCG *Xgc,NspGraphic *Obj, void *data)
{
  /* 
  int flag[]={1,2,4};
  double bbox[]={0,1,0,1,0,1};
  double teta = 35, alpha=45;
  */
  NspBox3d *P =(NspBox3d*) Obj ;
  if ( Obj->obj->hidden == TRUE ) return ;
  /* be sure that object are in canonical form */
  Mat2double(P->obj->x);
  Mat2double(P->obj->y);
  Mat2double(P->obj->z);
  /* 
     nsp_plot3d_1(Xgc,P->obj->x->R,P->obj->y->R,P->obj->z->R,&P->obj->z->m,&P->obj->z->n,
     &teta,&alpha,"X@Y@Z",flag,bbox);
  */
}

static void nsp_translate_box3d(BCG *Xgc,NspGraphic *Obj,double *tr)
{
  nsp_figure_force_redraw(Obj->obj->Fig);

}

static void nsp_rotate_box3d(BCG *Xgc,NspGraphic *Obj,double *R)
{
  nsp_figure_force_redraw(Obj->obj->Fig);
}

static void nsp_scale_box3d(BCG *Xgc,NspGraphic *Obj,double *alpha)
{
  nsp_figure_force_redraw(Obj->obj->Fig);
}

/* compute in bounds the enclosing rectangle of box3d 
 *
 */

static int nsp_getbounds_box3d(BCG *Xgc,NspGraphic *Obj,double *bounds)
{
  return FALSE;
}

