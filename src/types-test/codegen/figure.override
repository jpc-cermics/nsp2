/* -*- Mode: C -*- */
%%
headers

#include "nsp/figure.h"
extern BCG *nsp_check_graphic_context(void);
extern void store_graphic_object(BCG *Xgc,NspObject *obj);
static void nsp_draw_figure(BCG *Xgc,NspGraphic *Obj);
static int nsp_figure_connect(NspFigure *);
static int nsp_figure_unconnect(NspFigure *);

%%
init 

Init portion 

%%
override_type Figure
  /* inserted verbatim in the type definition */
  ((NspTypeGraphic *) type->surtype)->draw = nsp_draw_figure;

%%
ignore-glob
  *_get_type

%%
override figure_attach kwargs
int _wrap_figure_attach(Stack stack, int rhs, int opt, int lhs)
{
  NspObject  *pl = NULL;
  BCG *Xgc;
  int_types T[] = {obj, t_end} ;
  if ( GetArgs(stack,rhs,opt,T,&pl) == FAIL) return RET_BUG;
  /* here we should get the Xgc with the same id as figure XXXX */
  Xgc=nsp_check_graphic_context();
  store_graphic_object(Xgc, pl);
  return 0;
}

%%
last


/* draw the axes contained in the Figure 
 *
 */

static void nsp_draw_figure(BCG *Xgc,NspGraphic *Obj)
{
  Cell *cloc;
  NspList *L;
  NspFigure *F = (NspFigure *) Obj;
  /* draw elements */
  L = F->obj->children;
  cloc = L->first ;
  while ( cloc != NULLCELL ) 
    {
      if ( cloc->O != NULLOBJ ) 
	{
	  NspGraphic *G= (NspGraphic *) cloc->O;
	  G->type->draw(Xgc,G);
	}
      cloc = cloc->next;
    }
}

/* create a graphic window (in fact a Gtk one)
 * an set this window as the current one 
 * then add figure to the Xgc associated to the 
 * window 
 */

static int nsp_figure_connect(NspFigure *F)
{
  BCG *Xgc = set_graphic_window(F->obj->id);
  /* use the figure fields 
   */
  Xgc->graphic_engine->scale->xset_wresize(Xgc,F->obj->wresize);
  if ( F->obj->wresize == 0 && F->obj->viewport_dims->mn == 2 )
    {
      Xgc->graphic_engine->scale->xset_popupdim(Xgc,F->obj->viewport_dims->R[0],
						F->obj->viewport_dims->R[1]);

    }
  if ( F->obj->dims->mn == 2 ) 
    {
      Xgc->graphic_engine->scale->xset_popupdim(Xgc,F->obj->dims->R[0],
						F->obj->dims->R[1]);
    }
  store_graphic_object(Xgc,NSP_OBJECT(F));
  return OK;
}

/* delete window associated to F 
 */

static int nsp_figure_unconnect(NspFigure *F)
{
  scig_delete(F->obj->id); 
  return OK ;
}
