/* -*- Mode: C -*- */
#ifndef NSP_INC_@TYPENAME@
#define NSP_INC_@TYPENAME@

/*
 * This Software is GPL (Copyright ENPC 1998-2005) 
 * Jean-Philippe Chancelier Enpc/Cermics         
 */
  
/* @TYPENAME@ */

#include "@PARENTINC@"

/*
 * Nsp@TYPENAME@ inherits from Nsp@PARENT@
 */

typedef struct _nsp_@TYPEDOWNCASE@ Nsp@TYPENAME@;

typedef int (*@TYPEDOWNCASE@_save) (NspFile  *F, Nsp@TYPENAME@ *M);

typedef struct _nsp_type_@TYPENAME@ { 
  /*< private >*/
  NSP_TYPE_OBJECT__ 
  /*< public >*/
} NspType@TYPENAME@;

struct _nsp_@TYPEDOWNCASE@ {
  /*< private >*/
  Nsp@PARENT@ father; 
  NspType@TYPENAME@ *type; 
  /*< public >*/
  @FIELDS@
};

extern int nsp_type_@TYPEDOWNCASE@_id;
extern NspType@TYPENAME@ *nsp_type_@TYPEDOWNCASE@;

/* type instances for classa */

NspType@TYPENAME@ *new_type_@TYPEDOWNCASE@(type_mode mode);

/* instance for @TYPENAME@ */

Nsp@TYPENAME@ *new_@TYPEDOWNCASE@();

/*
 * Object methods redefined for @TYPEDOWNCASE@ 
 */

#define @NULL@ (Nsp@TYPENAME@*) 0

Nsp@TYPENAME@ *@TYPEDOWNCASE@_create(char *name,int color,int thickness,NspTypeBase *type);
Nsp@TYPENAME@ *@TYPEDOWNCASE@_copy(Nsp@TYPENAME@ *H);
void @TYPEDOWNCASE@_destroy(Nsp@TYPENAME@ *H);
void @TYPEDOWNCASE@_info(Nsp@TYPENAME@ *H, int indent);
void @TYPEDOWNCASE@_print(Nsp@TYPENAME@ *H, int indent);

/* from @TYPENAME@Obj.c */

extern Nsp@TYPENAME@ *@TYPEDOWNCASE@_object (NspObject *O); 
extern int Is@TYPENAME@Obj (Stack stack, int i); 
extern int Is@TYPENAME@(NspObject *O);
extern Nsp@TYPENAME@ *Get@TYPENAME@Copy (Stack stack, int i); 
extern Nsp@TYPENAME@ *Get@TYPENAME@ (Stack stack, int i); 

#endif 

/* private part */

#ifdef @TYPENAME@_Private 
static int init_@TYPEDOWNCASE@(Nsp@TYPENAME@ *o,NspType@TYPENAME@ *type);
static int @TYPEDOWNCASE@_size(Nsp@TYPENAME@ *Mat, int flag);
static char *@TYPEDOWNCASE@_type_as_string(void);
static char *@TYPEDOWNCASE@_type_short_string(void);
static int @TYPEDOWNCASE@_eq(Nsp@TYPENAME@ *A, NspObject *B);
static int @TYPEDOWNCASE@_neq(Nsp@TYPENAME@ *A, NspObject *B);
static int @TYPEDOWNCASE@_xdr_save(NspFile  *F, Nsp@TYPENAME@ *M);
static Nsp@TYPENAME@  *@TYPEDOWNCASE@_xdr_load(NspFile  *F);
static AttrTab @TYPEDOWNCASE@_attrs[];
static NspMethods *@TYPEDOWNCASE@_get_methods(void); 
static int int_@TYPESHORT@_create(Stack stack, int rhs, int opt, int lhs);
#endif /* @TYPENAME@_Private */
